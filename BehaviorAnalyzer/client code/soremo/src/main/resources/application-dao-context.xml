<beans  
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
						http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
						http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- Datasource -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
     		<list>
          		<value>classpath:database.properties</value>
     		</list>
   		</property>
	</bean>
	

   <!-- Common Basic Datasource -->
    <bean id="mainDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="username" value="${db.userName}" />
		<property name="password" value="${db.password}" />
		
		<property name="url" value="jdbc:mysql://${db.serverName}:${db.portNumber}/${db.database}"/>
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>

		<property name="testOnBorrow" value="true"/>
		<property name="validationQuery" value="SELECT 1"/>

    </bean>
   
   <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="mainDataSource"/>
		<property name="annotatedClasses">
			<list>
				<value>kr.co.userinsight.model.preference.Preference</value>

				<value>kr.co.userinsight.model.reuse.ReuseHistory</value>
				<value>kr.co.userinsight.model.keyword.Keyword</value>
				<value>kr.co.userinsight.model.comment.Comment</value>


				<value>kr.co.userinsight.model.quality.RDQualityFactor</value>
				<value>kr.co.userinsight.model.reuse.ReuseComment</value>


				<value>kr.co.userinsight.model.reuse.ReuseUserHistory</value>
				<value>kr.co.userinsight.model.keyword.UserHistoryKeyword</value>
				<value>kr.co.userinsight.model.userhistory.UserHistory</value>

			</list>
		</property>
		<property name="configLocation" value="classpath:hibernate.cfg.xml"/>
		<!--<property name="entityInterceptor" ref="interceptorChain" />-->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.show_sql">${db.hibernate.showsql}</prop>
				
				<!-- envers config: see http://docs.jboss.org/hibernate/core/4.1/devguide/en-US/html/ch15.html#d5e3889 -->
				<prop key="hibernate.envers.autoRegisterListeners">${db.hibernate.envers.autoregister}</prop>
				<prop key="org.hibernate.envers.audit_table_prefix">_env_</prop> 
				<!--<prop key="org.hibernate.envers.audit_table_suffix">_</prop>
				<prop key="org.hibernate.envers.revision_field_name">env_rev</prop> 
				<prop key="org.hibernate.envers.revision_type_field_name">env_rev_type</prop> 
				<prop key="org.hibernate.envers.do_not_audit_optimistic_locking_field">true</prop> 
				-->
				<!--
				<prop key="org.hibernate.envers.revision_on_collection_change">true</prop> 
				<prop key="org.hibernate.envers.store_data_at_delete">false</prop>
				<prop key="org.hibernate.envers.default_schema">null</prop>
				<prop key="org.hibernate.envers.audit_strategy">org.hibernate.envers.strategy.ValidityAuditStrategy</prop> 
				<prop key="org.hibernate.envers.audit_strategy_validity_end_rev_field_name">env_rev_end</prop> 
				<prop key="org.hibernate.envers.audit_strategy_validity_store_revend_timestamp">true</prop> 
				<prop key="org.hibernate.envers.audit_strategy_validity_revend_timestamp_field_name">env_rev_timestamp</prop>
				-->

				<prop key="org.hibernate.envers.global_with_modified_flag">true</prop>
				<prop key="org.hibernate.envers.modified_flag_suffix">env_mod</prop>
				<!--<prop key="org.hibernate.envers.track_entities_changed_in_revision ">true</prop>-->
				<!--
				<prop key="org.hibernate.envers.global_with_modified_flag">true</prop>
				<prop key="org.hibernate.envers.modified_flag_suffix">env_mod</prop>
				<prop key="org.hibernate.envers.track_entities_changed_in_revision ">true</prop>
				-->
				
			</props>
		</property>
	</bean>


	<!-- Spring/Hibernate Transaction Management          -->
	<!-- . Either via Spring/Hibernate TransactionManager -->
	<!-- . Either via JPA TransactionManager              -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- Spring/Hibernate TransactionManager -->
 	<bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
		<property name="dataSource" ref="mainDataSource" />
	</bean>

	<!-- the transactional advice  -->
  <tx:advice id="defaultTxAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="get*" propagation="SUPPORTS" isolation="DEFAULT" read-only="true"/>
            <tx:method name="find*" propagation="SUPPORTS" isolation="DEFAULT" read-only="true"/>
            <tx:method name="list*" propagation="SUPPORTS" isolation="DEFAULT" read-only="true"/>
            <tx:method name="is*" propagation="SUPPORTS" isolation="DEFAULT" read-only="true"/>
            <tx:method name="check*" propagation="SUPPORTS" isolation="DEFAULT" read-only="true"/>
            <tx:method name="add*" propagation="REQUIRED" isolation="DEFAULT" read-only="false"/>
            <tx:method name="update*" propagation="REQUIRED" isolation="DEFAULT" read-only="false"/>
            <tx:method name="save*" propagation="REQUIRED" isolation="DEFAULT" read-only="false"/>
            <tx:method name="delete*" propagation="REQUIRED" isolation="DEFAULT" read-only="false"/>
            <tx:method name="remove*" propagation="REQUIRED" isolation="DEFAULT" read-only="false"/>
            <tx:method name="change*" propagation="REQUIRED" isolation="DEFAULT" read-only="false"/>
            <tx:method name="modify*" propagation="REQUIRED" isolation="DEFAULT" read-only="false"/>
            <tx:method name="*" propagation="REQUIRED" rollback-for="Exception"/>
        </tx:attributes>
    </tx:advice>

	<aop:config>
		<aop:pointcut id="soremoServicesConfig"
					  expression="execution(* kr.co.userinsight.service..*Service.*(..))"/>
		<aop:advisor pointcut-ref="soremoServicesConfig" advice-ref="defaultTxAdvice"/>
	</aop:config>

</beans>